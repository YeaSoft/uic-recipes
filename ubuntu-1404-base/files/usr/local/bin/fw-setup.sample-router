#!/bin/bash
#
# (c) 2009-2010 YeaSoft Int'l - Leo Moll
#
# This script configures the firewall of a typical Router
# to fairly decent settings and saves them permanently
# if -s is specified
#
SCRIPTNAME=$(basename $0)
SCRIPTPATH=$(expr match "$0" '\(.*\)'\/$SCRIPTNAME)
SCRIPTEXTE=$(expr match "$SCRIPTNAME" '[^.]*.\(.*\)')

#========================================
# param1: protocol
# param2: incoming address
# param3: destination address
# param4: port number
#
function hard_redirect() {
	if [ "$1" != "all" ]; then
		HDPROTO="--protocol $1"
	else
		HDPROTO=""
	fi
	if [ "$2" != "0.0.0.0" ]; then
		HDSOURCE=" --destination $2"
	else
		HDSOURCE=""
	fi
	if [ "$4" != "0" ]; then
		HDPORT1="--dport $4"
		HDPORT2="--to-destination $3:$4"
	else
		HDPORT1=""
		HDPORT2="--to-destination $3"
	fi
	$IPTABLES --append PREROUTING --table nat --in-interface $EXTIF $HDPROTO $HDSOURCE $HDPORT1 --jump DNAT $HDPORT2
	$IPTABLES --append FORWARD --in-interface $EXTIF --out-interface $INTIF $HDPROTO --destination $3 $HDPORT1 --jump ACCEPT

#	if [ "$2" != "0.0.0.0" ]; then
#		$IPTABLES --append PREROUTING --table nat --in-interface $EXTIF --protocol $1 --destination $2 --dport $4 --jump DNAT --to-destination $3:$4
#		$IPTABLES --append FORWARD --in-interface $EXTIF --out-interface $INTIF --protocol $1 --destination $3 --dport $4 --jump ACCEPT
#	else
#		$IPTABLES --append PREROUTING --table nat --in-interface $EXTIF --protocol $1 --dport $4 --jump DNAT --to-destination $3:$4
#		$IPTABLES --append FORWARD --in-interface $EXTIF --out-interface $INTIF --protocol $1 --destination $3 --dport $4 --jump ACCEPT
#	fi
}

#=====================
#
# Initialize Variables
#
IPTABLES=/sbin/iptables

EXTIF="eth0"
INTIF="eth1"
TUNIF="tun+"


#==================
#
# Log instantiation
#
logger -t fw-setup Configuring Firewall
echo "Configuring Firewall..."


#=======================================================================
# iptables has 3 tables: the "filter", the "nat" and the "mangle" table.
# If not otherwise specified by the "-t [table]" parameter, all commands
# apply to the "filter table"
#=======================================================================

#==========================
#
# Initialize:
#
# Set Default Policies to DROP and flush all rules for each chain...
#
$IPTABLES --policy INPUT DROP
$IPTABLES --flush  INPUT
$IPTABLES --policy OUTPUT ACCEPT
$IPTABLES --flush  OUTPUT
$IPTABLES --policy FORWARD DROP
$IPTABLES --flush  FORWARD
#
# Flush also all rules in the nat table
#
$IPTABLES --table nat --flush

#===================
# INPUT chain rules:
#
# Accept ALL packets from the "lo" (Loopback) interface
#
$IPTABLES --append INPUT --in-interface lo --jump ACCEPT

#
# Accept ALL packets from the internal interfaces
#
$IPTABLES --append INPUT --in-interface $INTIF --jump ACCEPT


#
# Accept ALL packets from the OpenVPN interface
#
$IPTABLES --append INPUT --in-interface $TUNIF --jump ACCEPT

#
# Accept packets from the external interface ONLY if a connection to the
# source address is already ESTABLISHED or RELATED to an existing
# connection
#
$IPTABLES --append INPUT --in-interface $EXTIF --match state --state ESTABLISHED,RELATED --jump ACCEPT

#
# Accept Pings from everywhere
#
$IPTABLES --append INPUT --in-interface $EXTIF --protocol icmp --jump ACCEPT

#
# Accept also incoming TCP traffic on the external interface if
# the destination port is: SSH(22)
#
for i in 22
do
	echo -e "Opening TCP Traffic to Port " $i "..."
	$IPTABLES --append INPUT --in-interface $EXTIF --protocol tcp --destination-port $i --jump ACCEPT
done

#
# And also accept incoming UDP traffic from the external interface if
# the destination port is NTP(123), OpenVPN(1194), traceroute(33434-33534)
#
for i in 33434:33534
do
	echo -e "Opening UDP Traffic on Port " $i "..."
	$IPTABLES --append INPUT --in-interface $EXTIF --protocol udp --destination-port $i --jump ACCEPT
done

#=====================
# FORWARD chain rules:
#
# The following rules apply only to forwarded packets
#
echo -e "Router: Allow all connections OUT and only existing and specified ones IN"

#
# Allow packets from the external interface to be forwarded to internal
# computers only if they are in response of an ESTABLISHED connection
# or they are RELATED to an already open connection
#
$IPTABLES --append FORWARD --in-interface $EXTIF --out-interface $INTIF --match state --state ESTABLISHED,RELATED --jump ACCEPT

#
# Allow packates from the internal interfaces to be forwarded to any other interfaces
#
$IPTABLES --append FORWARD --in-interface $INTIF --jump ACCEPT
$IPTABLES --append FORWARD --in-interface $TUNIF --jump ACCEPT

#
# Allow ALL packets from the internal interface to be forwarded to other
# destinations also reachable from the internal interface
#
# $IPTABLES --append FORWARD --in-interface $INTIF --out-interface $INTIF --jump ACCEPT
# $IPTABLES --append FORWARD --in-interface $ADDIF --out-interface $INTIF --jump ACCEPT
# $IPTABLES --append FORWARD --in-interface $INTIF --out-interface $ADDIF --jump ACCEPT


#
# Allow ALL packets from the internal interface to be forwarded to the
# external interface
#
# $IPTABLES --append FORWARD --in-interface $INTIF --out-interface $EXTIF --jump ACCEPT
# $IPTABLES --append FORWARD --in-interface $ADDIF --out-interface $EXTIF --jump ACCEPT

#
# Allow ALL packets from the internal interface to be forwarded to the
# VPN interfaces
#
#$IPTABLES --append FORWARD --in-interface $INTIF --out-interface $VPNIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $VPNIF --out-interface $INTIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $INTIF --out-interface $TUNIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $TUNIF --out-interface $INTIF --jump ACCEPT

#$IPTABLES --append FORWARD --in-interface $ADDIF --out-interface $VPNIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $VPNIF --out-interface $ADDIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $ADDIF --out-interface $TUNIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $TUNIF --out-interface $ADDIF --jump ACCEPT

#
# Allow Cross-VPN Connections (pptp-tun)
#
#$IPTABLES --append FORWARD --in-interface $TUNIF --out-interface $VPNIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $VPNIF --out-interface $TUNIF --jump ACCEPT
#$IPTABLES --append FORWARD --in-interface $TUNIF --out-interface $TUNIF --jump ACCEPT


#
# Log all blocked packets
#
#$IPTABLES --append INPUT --in-interface $EXTIF --jump LOG --log-prefix "BLOCKED INCOMING PACKET: "
#$IPTABLES --append OUTPUT --out-interface $EXTIF --jump LOG --log-prefix "BLOCKED OUTGOING PACKET: "
#$IPTABLES --append FORWARD --in-interface $EXTIF --jump LOG --log-prefix "BLOCKED FORWARDER PACKET: "
#$IPTABLES --append FORWARD --jump LOG --log-prefix "BLOCKED FORWARDER PACKET: "

#=====================
#
# Configure masquerading on NAT
#
echo "Enabling SNAT (MASQUERADE) functionality on $EXTIF"

#
# Masquerade all packets ROUTED to the external interface
#
$IPTABLES --table nat --append POSTROUTING --out-interface $EXTIF  --jump MASQUERADE


#
# Save firewall configuration
#
if [ "$1" == "-s" ]; then
	iptables-save > /etc/iptables.conf
	logger -t fw-setup Firewall configuration saved as default
	echo "Saving firewall rules..."
fi

#====================
#
# Finished!
#
echo "Firewall done."
