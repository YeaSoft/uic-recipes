#!/bin/bash
#
# (c) 2010 YeaSoft Int'l - Leo Moll
#
# This script synchronizes all scripts and shared
# configs in a YeaSoft environment
#
VERSION=1.0
SCRIPTNAME=$(basename $0)
SCRIPTPATH=$(expr match "$0" '\(.*\)'\/$SCRIPTNAME)

#####################################
# variables section

# initialize configuration variables
YEAHUB="10.65.0.10"
YEAPXE="pxeloader@10.65.0.10"
UNISONEXE=/usr/bin/unison
UNISON=/root/.unison

# load configuration data
if [ -e /etc/yst.conf ]; then
	source /etc/yst.conf
elif [ -e $SCRIPTPATH/yst.conf ]; then
	source $SCRIPTPATH/yst.conf
fi

# initialize runtime variables
VERBOSE=0

#####################################
# basic script functions

function show_usage {
	cat <<EOF
usage: $SCRIPTNAME [-hv] 

Options:
 -v, --verbose                    increase verbosity
(-h) --help                       show this help (-h works with no other options)

Script description text

EOF
}

function show_name {
	echo "$SCRIPTNAME, version $VERSION"
}

function show_error {
	echo "$SCRIPTNAME error: $*" >&2
}

function show_verbose {
	if [ $VERBOSE -ge $1 ]; then
		echo "$SCRIPTNAME: ${*:2}"
	fi
}

function echo_verbose {
	if [ $VERBOSE -ge $1 ]; then
		echo "${*:2}"
	fi
}

function test_exec {
	case $? in
	0);;
	*)	case "$1" in
		"")	show_error "last command failed with error (code $?)";;
		*)	show_error "$1 failed with error (code $?)";;
		esac
		if [ -n "%2" ]; then
			show_error "commandline: $2"
		fi
		exit $?;;
	esac
}

#####################################
# script initialisation

PARSER=$(getopt --name "$SCRIPTNAME" --options h,v --longoptions help,verbose -- "$@")
case $? in
0);;
1) show_error "syntax or usage error (code $?)"; exit $?;;
2) show_error "syntax or usage error (code $?) in [getopt]"; exit $?;;
3) show_error "internal error (code $?) in [getopt]"; exit $?;;
4) show_error "wrong getopt version istalled"; exit $?;;
*) show_error "Unknown getopt error (code $?)"; exit $?;;
esac

# Parameter parsing
eval set -- "$PARSER"
while true; do
	case "$1" in
	-h|--help)			show_name; echo; show_usage; exit 1;;
	-v|--verbose)			(( VERBOSE++ )); shift;;
	--)				shift; break;;
        *)				echo "$SCRIPTNAME: $1: unknown option"; show_error "syntax or usage error (code 1)"; exit 1;;
        esac
done

# configuration checking
case "$VERBOSE" in
0)	;;
1)	RV="--verbose --stats --human-readable"; UV="-v";;
2|3|4)	RV="--verbose --stats --human-readable"; UV="-vv";;
*)	;;
esac

#####################################
# script functions

#####################################
# script main routine

# synchronize the scripts themselves
echo_verbose 1 Pull server scripts...
echo_verbose 1 ----------------------
rsync $RV --checksum --recursive --links --perms --rsh=ssh --compress ${YEAHUB}:/mnt/data/tftproot/yeatool/ /usr/local/bin/

# do hub & spoke unison synchronisation jobs
unison-sync $UV
echo_verbose 1 Waiting 60 seconds...
sleep 60
unison-sync $UV

echo_verbose 1 Restarting base services...
echo_verbose 1 ---------------------------
service dhcp3-server restart
service bind9 restart


# synchronize the bind environment
#echo Pull bind configurations...
#echo ---------------------------
#rsync --verbose --stats --human-readable --checksum --recursive --links --perms --rsh=ssh --compress ${MOBHUB}:/etc/bind/named.conf.*.*ar? /etc/bind
#rsync --verbose --stats --human-readable --checksum --recursive --links --perms --rsh=ssh --compress ${MOBHUB}:/etc/bind/named.conf.local.*-gate /etc/bind
#service bind9 restart

# synchronize the PXE loader
#echo Pull PXE Boot Environment...
#echo ----------------------------
#rsync --verbose --stats --human-readable --checksum --recursive --links --perms --delete --rsh=ssh --compress ${YEAPXE}:/mnt/data/tftproot/yeaboot/ /mnt/data/tftproot/yeaboot/

